spring:
  application:
    name: eCommerce
  profiles:
    active: local
  datasource:
    name: HangHaePlusDataSource
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximum-pool-size: 3
      connection-timeout: 10000
      max-lifetime: 60000
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    database: mysql
    open-in-view: false
    generate-ddl: false
    show-sql: true
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: update
      use_sql_comments: true
      format_sql: true
    properties:
      hibernate.timezone.default_storage: NORMALIZE_UTC
      hibernate.jdbc.time_zone: UTC
  kafka:
    listener:
      missing-topics-fatal: false # Kafka 토픽이 없거나 할당되지 않아도 컨슈머 실행을 계속함
    bootstrap-servers: localhost:9092,localhost:9094,localhost:9096
    # kafka-1:9092,kafka-2:9092,kafka-3:9092
    # localhost:9092,localhost:9094,localhost:9096
    # kafka1:9092,kafka2:9094,kafka3:9096
    consumer:
      group-id: eCommerce
      auto-offset-reset: earliest
      enable-auto-commit: true
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.trusted.packages: "*"  # JSON Deserializer 사용 시 필요
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 토픽 이름 정의
      topic:
        userId: userId
    properties:
      enable.idempotence: true   # Exactly-once 전송 보장(acks=all과 함께)
      acks: all
      auto.create.topics.enable: false # 토픽 자동 생성 비활성화
  data:
    redis:
      repositories:
        enabled: false
      host: localhost
      port: 6379
  cache:
    type: redis
  task:
    scheduling:
      enabled: true

logging:
  level:
    root: INFO  # 전체 로그 레벨
    org.springframework.web: INFO
    org.hibernate: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"  # 로그 출력 포맷 (선택 사항)
decorator:
  datasource:
    enabled: true

management:
  endpoints:
    web:
      exposure:
        include: caches  # ✅ 캐시 정보 확인 가능하도록 설정

---
spring.config.activate.on-profile: local, test

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/hhplus?characterEncoding=UTF-8&serverTimezone=UTC
    username: application
    password: application
  data:
    redis:
      repositories:
        enabled: false
      host: localhost
      port: 6379
  cache:
    type: redis
  task:
    scheduling:
      enabled: true